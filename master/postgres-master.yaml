apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-master
  labels:
    app: postgres
    role: master
spec:
  serviceName: "postgres-master-service"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      role: master
  template:
    metadata:
      labels:
        app: postgres
        role: master
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: init
        image: postgres:14
        command: [ "bash", "-c" ]
        args:
        - |
          mkdir -p /var/lib/postgresql/data && chown -R 999:999 /var/lib/postgresql/data
        volumeMounts:
        - name: postgres-master-data
          mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: 'postgres:14'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          envFrom:
            - secretRef:
                name: postgres-master-secret
          args: ["-c", "config_file=/etc/postgresql/conf.d/postgresql.conf"]
          volumeMounts:
            - name: postgres-master-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-master-config
              mountPath: /etc/postgresql/conf.d
            - name: postgres-init-sql
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
      volumes:
        - name: postgres-master-data
          persistentVolumeClaim:
            claimName: postgres-master-pvc
        - name: postgres-init-sql
          configMap:
            name: postgres-init-sql
            items:
              - key: init.sql
                path: init.sql
        - name: postgres-master-config
          configMap:
            name: postgres-master-config
